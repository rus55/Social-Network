{"version":3,"file":"static/js/449.fb8fddd2.chunk.js","mappings":"6LACA,G,QAAA,CAAgB,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,mBCY9K,EATmB,SAACA,GAChB,IAAIC,EAAO,aAAeD,EAAME,GAChC,OACI,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UCCtC,EAJgB,SAACN,GACb,OAAO,gBAAKG,UAAWC,EAAAA,OAAhB,SAA2BJ,EAAMO,W,iDCDtCC,GAAcC,EAAAA,EAAAA,GAAiB,IAoBrC,GAAeC,EAAAA,EAAAA,GAAoC,CAACC,KAAM,2BAA1D,EAlBuB,SAACX,GACpB,OACI,kBAAMY,SAAUZ,EAAMa,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CACIC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAUV,GACrBW,YAAY,qBACZb,KAAK,sBAGb,0BACI,iDCYhB,EAxBgB,SAACN,GACb,IAAIoB,EAAQpB,EAAMqB,WAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAiBJ,GAAIuB,EAAEvB,IAAZuB,EAAEvB,OAC1EwB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASrB,QAASqB,EAAErB,SAAcqB,EAAE1B,OAMnF,OAAKF,EAAM6B,QAEP,iBAAK1B,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,YAAhB,SACKkB,KAEL,gBAAKnB,UAAWC,EAAAA,SAAhB,UACI,yBAAMsB,OAEV,SAAC,EAAD,CAAgBd,SAbJ,SAACkB,GACjB9B,EAAM+B,YAAYD,EAAOE,uBAGH,SAAC,KAAD,CAAU3B,GAAG,YCe3C,GAAe4B,EAAAA,EAAAA,KAEXC,EAAAA,EAAAA,KAhBkB,SAACd,GACnB,MAAO,CACHC,WAAYD,EAAMC,eAID,SAACc,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,GAASC,EAAAA,EAAAA,GAAmBJ,SAKxC,CAGEK","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ZwEaa\",\"dialogItems\":\"Dialogs_dialogItems__CjCm8\",\"active\":\"Dialogs_active__X4Xpz\",\"messages\":\"Dialogs_messages__IwOYm\",\"message\":\"Dialogs_message__+EB7z\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './../Dialogs.module.css'\n\nconst DialogItem = (props: any) => {\n    let path = '/dialogs/1' + props.id\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import React from 'react';\nimport s from './../Dialogs.module.css'\n\n\n\nconst Message = (props: any) => {\n    return <div className={s.dialog}>{props.message}</div>\n}\n\nexport default Message;","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props: any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    validate={[required, maxLength50]}\r\n                    placeholder='Enter your message'\r\n                    name='newMessageBody'\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm<{newMessageBody: string}>({form: 'dialog-add-message-form'})(AddMessageForm)","import React from 'react';\nimport s from './Dialogs.module.css'\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport {DialogsPropsType} from './DialogsContainer';\nimport {Redirect} from \"react-router-dom\";\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\nconst Dialogs = (props: DialogsPropsType) => {\n    let state = props.dialogPage\n\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>)\n\n    let addNewMessage = (values: {newMessageBody: string}) => {\n        props.sendMessage(values.newMessageBody)\n    }\n\n    if (!props.isAuth) return <Redirect to='/login'/>\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n            </div>\n            <AddMessageForm onSubmit={addNewMessage} />\n        </div>\n    );\n};\n\nexport default Dialogs;","import React, {ComponentType} from 'react';\nimport {InitialStateType, sendMessageCreator} from '../../redux/dialogs-reducer';\nimport {connect} from 'react-redux';\nimport {compose, Dispatch} from 'redux';\nimport {AppStateType} from '../../redux/redux-store';\nimport Dialogs from './Dialogs';\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\ntype MapStateToPropsType = {\n    dialogPage: InitialStateType\n    isAuth: boolean\n}\n\ntype MapDispatchPropsType = {\n    sendMessage: (newMessageBody: string) => void\n}\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchPropsType\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        dialogPage: state.dialogPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        sendMessage: (newMessageBody: string) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        }\n    }\n}\n\nexport default compose<ComponentType>(\n    //withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps),\n)(Dialogs)"],"names":["props","path","id","className","s","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","Dialogs"],"sourceRoot":""}